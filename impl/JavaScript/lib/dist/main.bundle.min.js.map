{
  "version": 3,
  "sources": ["../src/binascii.js", "../src/random.js", "../src/str.js", "../src/exceptions.js", "../src/loader.js", "../src/scrypt-layer/dynamic-compile.js", "../src/internal-util.js", "../src/encrypt_data.js", "../src/derive_key.js", "../src/encrypt_file.js", "../src/key_management.js", "../src/context.js", "../src/stream.js", "../src/internal-expose.js", "../src/util-wrappers.js", "../src/version.js"],
  "sourcesContent": ["const hexTable = new Array(256);\r\nfor (let i = 0; i < 256; i++) {\r\n    hexTable[i] = i.toString(16).padStart(2, '0');\r\n}\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @returns {string}\r\n */\r\nexport function hexlify(data) {\r\n    if (!data || !(data instanceof Uint8Array)) {\r\n        throw new TypeError(\"Input must be a Uint8Array\");\r\n    }\r\n    const length = data.length;\r\n    const arr = new Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        arr[i] = hexTable[data[i]];\r\n    }\r\n    return arr.join('');\r\n}\r\n\r\nconst throwing = {\r\n    get InvalidHexStringException() {\r\n        throw new TypeError('Invalid hex string');\r\n    },\r\n}\r\n\r\n/**\r\n * @param {string} hexStr\r\n * @returns {Uint8Array}\r\n */\r\nexport function unhexlify(hexStr) {\r\n    if (typeof hexStr !== 'string') {\r\n        throw new TypeError(\"Input must be a string\");\r\n    }\r\n    const length = hexStr.length;\r\n    if (length % 2 !== 0) {\r\n        throw new TypeError(\"Hex string must have even length\");\r\n    }\r\n    hexStr = hexStr.toLowerCase();\r\n    const bytes = new Uint8Array(length >> 1);\r\n    for (let i = 0; i < length; i += 2) {\r\n        const highCode = hexStr.charCodeAt(i);\r\n        const lowCode = hexStr.charCodeAt(i + 1);\r\n\r\n        const high = highCode >= 97 && highCode <= 102 ? highCode - 87 :\r\n            highCode >= 48 && highCode <= 57 ? highCode - 48 : throwing.InvalidHexStringException;\r\n        const low = lowCode >= 97 && lowCode <= 102 ? lowCode - 87 :\r\n            lowCode >= 48 && lowCode <= 57 ? lowCode - 48 : throwing.InvalidHexStringException;\r\n\r\n        // @ts-ignore\r\n        bytes[i >> 1] = (high << 4) | low;\r\n    }\r\n    return bytes;\r\n}", "const crypto = globalThis.crypto; // To avoid the possible security risk\r\n\r\n/**\r\n * @param {number} count\r\n */\r\nexport function get_random_bytes(count) {\r\n    const randomBytes = new Uint8Array(count);\r\n    crypto.getRandomValues(randomBytes);\r\n    return randomBytes;\r\n}\r\nexport function get_random_int8_number() {\r\n    const randomBytes = get_random_bytes(1);\r\n    return new Int8Array(randomBytes)[0];\r\n}\r\nexport function get_random_uint8_number() {\r\n    const randomBytes = get_random_bytes(1);\r\n    return new Uint8Array(randomBytes)[0];\r\n}", "/**\r\n * @param {string} input\r\n */\r\nexport function str_encode(input, encoding = \"utf-8\") {\r\n    if (typeof input !== \"string\") {\r\n        throw new TypeError(\"Input must be a string\");\r\n    }\r\n    if (encoding.toLowerCase() !== \"utf-8\") {\r\n        throw new Error(\"Only 'utf-8' encoding is supported\");\r\n    }\r\n    return new TextEncoder().encode(input);\r\n}\r\n/**\r\n * @param {Uint8Array|ArrayBuffer} input\r\n */\r\nexport function str_decode(input, encoding = \"utf-8\") {\r\n    if (!(input instanceof Uint8Array)) {\r\n        input = new Uint8Array(input);\r\n    }\r\n    if (encoding.toLowerCase() !== \"utf-8\") {\r\n        throw new Error(\"Only 'utf-8' encoding is supported\");\r\n    }\r\n    return new TextDecoder().decode(input);\r\n}", "// Base Exception Class.\r\nexport class LibraryError extends Error {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Library Error', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'LibraryError';\r\n    }\r\n}\r\n\r\n/**\r\n * @param {any} error\r\n * @returns {never}\r\n */\r\nexport function raise(error) {\r\n    throw error; \r\n}\r\n\r\n// Level 1\r\n\r\nexport class EncryptionError extends LibraryError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Encryption Error', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'EncryptionError';\r\n    }\r\n}\r\n\r\nexport class NetworkError extends LibraryError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Network Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'NetworkError';\r\n    }\r\n}\r\n\r\n// Level 2\r\n\r\nexport class ExpectedError extends EncryptionError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Expected Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'ExpectedError';\r\n    }\r\n}\r\n\r\nexport class RuntimeException extends EncryptionError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Runtime Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'RuntimeException';\r\n    }\r\n}\r\n\r\nexport class UnexpectedError extends RuntimeException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Unexpected Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'UnexpectedError';\r\n    }\r\n}\r\n\r\nexport class InternalError extends UnexpectedError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Internal Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InternalError';\r\n    }\r\n}\r\n\r\nexport class InputError extends RuntimeException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Input Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InputError';\r\n    }\r\n}\r\n\r\nexport class ParameterError extends InputError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Data Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'ParameterError';\r\n    }\r\n}\r\n\r\nexport class DataError extends InputError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Data Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'DataError';\r\n    }\r\n}\r\n\r\nexport class UserException extends RuntimeException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(The end user has a fault that caused the exception. This is not code bug.)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'UserException';\r\n    }\r\n}\r\n\r\n// Level 3\r\n\r\nexport class VersionSystemError extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = '(Version System Error)', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'VersionSystemError';\r\n    }\r\n}\r\n\r\n// Level 4 -- Detailed Errors\r\n\r\nexport class InvalidParameterException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The parameter provided is invalid.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InvalidParameterException';\r\n    }\r\n}\r\n\r\nexport class BadDataException extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The data is bad.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'BadDataException';\r\n    }\r\n}\r\n\r\nexport class InvalidScryptParameterException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The N, r, or p is not valid or out of range.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InvalidScryptParameterException';\r\n    }\r\n}\r\n\r\nexport class EncryptionVersionMismatchException extends VersionSystemError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The version of the encryption library doesn\\'t match.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'EncryptionVersionMismatchException';\r\n    }\r\n}\r\n\r\nexport class InvalidFileFormatException extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The file format is invalid.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InvalidFileFormatException';\r\n    }\r\n}\r\n\r\nexport class IVException extends InternalError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'IV Exception.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'IVException';\r\n    }\r\n}\r\n\r\nexport class FileCorruptedException extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'File is corrupted.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'FileCorruptedException';\r\n    }\r\n}\r\n\r\nexport class InvalidEndMarkerException extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The end marker is invalid.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InvalidEndMarkerException';\r\n    }\r\n}\r\n\r\nexport class CannotDecryptException extends UserException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Cannot decrypt', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'CannotDecryptException';\r\n    }\r\n}\r\n\r\nexport class UnexpectedFailureInChunkDecryptionException extends UnexpectedError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'An unexpected failure occurred while decrypting the chunk. The file may be corrupted.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'UnexpectedFailureInChunkDecryptionException';\r\n    }\r\n}\r\n\r\nexport class CryptContextReusedException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Not allowed to reuse a crypt context.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'CryptContextReusedException';\r\n    }\r\n}\r\n\r\nexport class NotSupportedException extends InputError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Operation not supported', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'NotSupportedException';\r\n    }\r\n}\r\n\r\nexport class DeprecationException extends InputError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Trying to use a deprecated feature.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'DeprecationException';\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated No longer use exceptions to change control flow. Now we return empty blob with {eof: true} to indicate the end of file.\r\n */\r\nexport class EndOfFileException extends ExpectedError {\r\n    constructor(message = 'End of File', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'EndOfFileException';\r\n        // @ts-ignore\r\n        if (typeof process !== 'undefined' && process?.env?.NODE_ENV === 'production') return;\r\n        globalThis.console.warn('%c[npm::simple-data-crypto] %c[EndOfFileException] %cDEPRECATED!! %cDeprecated and will be removed in the next MAJOR version. See %csrc/exceptions.js%c for more information.\\n' +\r\n            '%cNote: %cThis %cdoes not%c indicate the package is deprecated. Instead, it indicates that your code uses the %cdeprecated%c class %cEndOfFileException%c. Fix your code to suppress this warning.',\r\n            'color: #007700', 'color: #570263', 'color: red; font-weight: bold;', '', 'font-weight: bold;', '', 'font-weight: bold; color: #0000ff', '',\r\n            'color: red; font-weight: bold;', '', 'font-style: italic', '', 'color: #570263', '');\r\n    }\r\n}\r\n\r\nexport class CryptContextNotInitedException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Crypt context is not initialized.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'CryptContextNotInitedException';\r\n    }\r\n}\r\n\r\nexport class InvalidCryptContextTypeException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Invalid crypt context type.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'InvalidCryptContextTypeException';\r\n    }\r\n}\r\n\r\nexport class CryptContextReleasedException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Crypt context has been released.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'CryptContextReleasedException';\r\n    }\r\n}\r\n\r\nexport class OperationNotPermittedException extends ParameterError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'Operation not permitted.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'OperationNotPermittedException';\r\n    }\r\n}\r\n\r\nexport class EncryptionAlgorithmNotSupportedException extends DataError {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The specified encryption algorithm is not supported.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'EncryptionAlgorithmNotSupportedException';\r\n    }\r\n}\r\n\r\nexport class ChaCha20NotSupportedException extends EncryptionAlgorithmNotSupportedException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'ChaCha20 is not supported yet.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'ChaCha20NotSupportedException';\r\n    }\r\n}\r\n\r\nexport class DangerousEncryptionAlgorithmException extends EncryptionAlgorithmNotSupportedException {\r\n    /**\r\n     * @param {string} message \r\n     * @param {Object} [additional] \r\n     */\r\n    constructor(message = 'The specified encryption algorithm is DANGEROUS.', additional = undefined) {\r\n        super(message, additional);\r\n        this.name = 'DangerousEncryptionAlgorithmException';\r\n    }\r\n}\r\n", "export function load_script(src) {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.src = src;\r\n        script.onload = () => resolve(script);\r\n        script.onerror = e => reject(e);\r\n        document.head.append(script);\r\n    });\r\n}\r\n\r\nexport function load_module(src) {\r\n    return import(src); // just a wrapper\r\n}\r\n\r\nexport function load_deps_es5(deps_name, deps_src) {\r\n    if (Reflect.has(globalThis, deps_name)) return Promise.resolve(Reflect.get(globalThis, deps_name));\r\n    return load_script(deps_src).then(() => {\r\n        return Reflect.get(globalThis, deps_name);\r\n    });\r\n}", "import { load_deps_es5 } from \"../loader.js\";\r\nconst scryptAPI = await load_deps_es5('scrypt', import.meta.resolve('./WebScrypt/scrypt.js'));\r\nscryptAPI.setResPath(import.meta.resolve('./WebScrypt/asset/'));\r\nscryptAPI.load();\r\n\r\n\r\n\r\n// \u5BF9 WebScrypt \u7684\u81EA\u5B9A\u4E49\u5C01\u88C5\r\nexport const scrypt = (function () {\r\n    const queue = [];\r\n    let running = false;\r\n    const work = (task) => new Promise(async (resolve, reject) => {\r\n        scryptAPI.onprogress = p => {\r\n            if (task.onprogress) task.onprogress(p);\r\n        };\r\n        scryptAPI.oncomplete = dk => {\r\n            task.resolve(dk);\r\n            resolve(true);\r\n        };\r\n        scryptAPI.onerror = e => {\r\n            task.reject(e);\r\n            resolve(false);\r\n        };\r\n        try {\r\n            scryptAPI.config({ N: task.N, r: task.r, P: task.p }, { maxPassLen: 8192, maxSaltLen: 2048, maxDkLen: 1024, maxThread: 1 });\r\n            await new Promise(r => scryptAPI.onready = r);\r\n            scryptAPI.hash(task.key, task.salt, task.dklen);\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n    async function thread() {\r\n        let task = null;\r\n        while (queue.length) try {\r\n            task = queue.splice(0, 1)[0];\r\n            await work(task);\r\n            await nextTick();\r\n        } catch (e) {\r\n            task?.reject(e);\r\n        }\r\n        running = false;\r\n    }\r\n    return function scrypt(key, salt, N, r, p, dklen, onprogress = null) {\r\n        return new Promise((resolve, reject) => {\r\n            queue.push({\r\n                key, salt, N, r, p, dklen, resolve, reject, onprogress\r\n            });\r\n            if (!running) {\r\n                running = true;\r\n                setTimeout(thread); // \u542F\u52A8\u5B8F\u4EFB\u52A1\r\n            }\r\n        });\r\n    }\r\n})();\r\n\r\n\r\nfunction nextTick() {\r\n    return new Promise(r => setTimeout(r));\r\n}", "import * as Exceptions from \"./exceptions.js\";\r\nimport { str_decode } from \"./str.js\";\r\n\r\nexport const PADDING_SIZE = 4096; // 4096 bytes\r\nexport const END_IDENTIFIER = [\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n];\r\nexport const TAIL_BLOCK_MARKER = [\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,\r\n];\r\nexport const END_MARKER = [\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,\r\n];\r\nexport const FILE_END_MARKER = [0xFF, 0xFD, 0xF0, 0x10, 0x13, 0xD0, 0x12, 0x18, 0x55, 0xAA];\r\nexport const POWER_2_64 = 2n ** 64n;\r\nif (POWER_2_64 !== BigInt('18446744073709551616')) {\r\n    throw new Exceptions.UnexpectedError('POWER_2_64 is not 2^64');\r\n}\r\n\r\n// @ts-ignore\r\nconst timerproc = (typeof process === 'undefined') ?\r\n    requestAnimationFrame : // browser\r\n    setTimeout; // node.js\r\nexport function nextTick() {\r\n    return new Promise(r => timerproc(r));\r\n}\r\n\r\n/**\r\n * @param {string} major_version\r\n * @param {number|null} version_marker\r\n */\r\nexport function normalize_version(major_version, version_marker = null) {\r\n    if (!major_version) return `Unknown Version`;\r\n    let vm = String(version_marker);\r\n    if (String(major_version) === '1.1') vm = 'null';\r\n    if (!version_marker) return `${major_version}/0`;\r\n    return `${major_version}/${vm}`;\r\n}\r\n\r\n// versions\r\nexport const ENCRYPTION_FILE_VER_1_1_0 = normalize_version('1.1');\r\nexport const ENCRYPTION_FILE_VER_1_2_10020 = normalize_version('1.2', 10020);\r\n\r\n\r\n/**\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n */\r\nexport async function GetFileVersion(file_reader) {\r\n    // \u8BFB\u53D6\u6587\u4EF6\u5934\u5E76\u9A8C\u8BC1\r\n    const header = await file_reader(0, 13);\r\n    if (str_decode(header) !== 'MyEncryption/') {\r\n        throw new Exceptions.InvalidFileFormatException();\r\n    }\r\n    const top_header_version = (str_decode(await file_reader(13, 16)));\r\n    if(!(['1.1', '1.2'].includes(top_header_version))) {\r\n        throw new Exceptions.EncryptionVersionMismatchException();\r\n    }\r\n    const version_marker = new DataView((await file_reader(16, 20)).buffer).getUint32(0, true);\r\n    const version = normalize_version(top_header_version, version_marker);\r\n    return version;\r\n}\r\n\r\n/**\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n */\r\nexport async function GetFileInfo(file_reader) {\r\n    const version = await GetFileVersion(file_reader);\r\n    if (version === ENCRYPTION_FILE_VER_1_1_0) {\r\n        throw new Exceptions.OperationNotPermittedException('The chunk size is volatile and we cannot get a fixed value.');\r\n    }\r\n    if (version === ENCRYPTION_FILE_VER_1_2_10020) {\r\n        let read_pos = 16 + 4;\r\n        const ekey_len = new DataView((await file_reader(read_pos, read_pos + 4)).buffer).getUint32(0, true);\r\n        const ekey = str_decode(await file_reader(read_pos + 4, read_pos + 4 + ekey_len));\r\n        read_pos += PADDING_SIZE;\r\n        const json_len_bytes = await file_reader(read_pos, read_pos + 4);\r\n        const json_len = new DataView(json_len_bytes.buffer).getUint32(0, true);\r\n        read_pos += 4;\r\n        read_pos += json_len;\r\n        const chunk_size = Number(new DataView((await file_reader(read_pos, read_pos + 8)).buffer).getBigUint64(0, true));\r\n        let nonce_counter = Number(new DataView((await file_reader(read_pos + 8, read_pos + 16)).buffer).getBigUint64(0, true));\r\n        return ({ version, chunk_size, nonce_counter, ekey });\r\n    }\r\n    throw new Exceptions.EncryptionVersionMismatchException();\r\n}\r\n\r\n/**\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader\r\n */\r\nexport async function GetFileChunkSize(file_reader) {\r\n    return (await GetFileInfo(file_reader)).chunk_size;\r\n}\r\n\r\n/**\r\n * @param {string} algorithm\r\n */\r\nexport function CheckAlgorithm(algorithm) {\r\n    // \u5224\u65AD\u662F\u5426\u652F\u6301\u7684\u52A0\u5BC6\u7B97\u6CD5\r\n    // \u9ED8\u8BA4\u662FAES-GCM\r\n    if ((!!algorithm) && (algorithm !== \"AES-GCM\")) {\r\n        if (algorithm === 'ChaCha20' || algorithm === 'ChaCha20-Poly1305') {\r\n            throw new Exceptions.ChaCha20NotSupportedException();\r\n        }\r\n        if (algorithm === 'DES' || algorithm === 'RC4') {\r\n            throw new Exceptions.DangerousEncryptionAlgorithmException();\r\n        }\r\n        if (algorithm === 'XTS-AES') {\r\n            throw new Exceptions.EncryptionAlgorithmNotSupportedException(\"XTS-AES is not supported yet\");\r\n        }\r\n        throw new Exceptions.EncryptionAlgorithmNotSupportedException(undefined, {\r\n            cause: new Error(String(algorithm))\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} message\r\n */\r\nexport async function is_encrypted_message(message) {\r\n    if (typeof message !== 'string') return false;\r\n    \r\n    if (message.charAt(0) === ':') {\r\n        const arr = message.split(':');\r\n        if (arr.length === 8) {\r\n            const [, data, phrase, salt, N, v, a,] = arr;\r\n            return !!(data && phrase && salt && N && v && a);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if (message.charAt(0) !== '{') return false;\r\n\r\n    try {\r\n        const json = JSON.parse(message);\r\n        return (json.data && json.parameter && json.N && json.v); \r\n    }\r\n    catch {\r\n        return false; \r\n    }\r\n}\r\n\r\n/**\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n */\r\nexport async function is_encrypted_file(file_reader) {\r\n    try {\r\n        const info = await GetFileInfo(file_reader);\r\n        return !!info.version;\r\n    }\r\n    catch {\r\n        return false; \r\n    }\r\n}", "import { get_random_bytes } from \"./random.js\";\r\nimport { derive_key } from \"./derive_key.js\";\r\nimport { hexlify, unhexlify } from \"./binascii.js\";\r\nimport { str_decode, str_encode } from \"./str.js\";\r\nimport * as Exceptions from './exceptions.js';\r\nimport { CheckAlgorithm } from \"./internal-util.js\";\r\n\r\nconst crypto = globalThis.crypto; // To avoid the possible security risk\r\n\r\n/**\r\n * @param {string} json\r\n */\r\nfunction safeparse(json) {\r\n    try {\r\n        const r = JSON.parse(json);\r\n        if (!r || !r.data || !r.parameter || !r.N || !r.v) throw new Exceptions.BadDataException('The message is bad since the JSON is not complete.');\r\n        return r;\r\n    } catch {\r\n        throw new Exceptions.BadDataException('The message is bad since it is neither a JSON or a new-format ciphertext.');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} message\r\n * @param {string} key\r\n * @param {?string} phrase phrase\r\n * @param {?number} N N\r\n */\r\nexport async function encrypt_data(message, key, phrase = null, N = null) {\r\n    // (1) \u751F\u6210\u968F\u673AIV (12 bytes for GCM)\r\n    const iv = get_random_bytes(12);\r\n\r\n    // (2) \u6D3E\u751F\u5BC6\u94A5\r\n    const { derived_key, parameter, N: N2 } = await derive_key(key, iv, phrase, N);\r\n    N = N2;\r\n\r\n    // (3) \u5BFC\u5165\u5BC6\u94A5\r\n    const cipher = await crypto.subtle.importKey(\"raw\", derived_key, \"AES-GCM\", false, [\"encrypt\"]);\r\n\r\n    if (typeof message !== \"string\") {\r\n        throw new Exceptions.OperationNotPermittedException(\"The ability to directly encrypt binary data has been removed in the new version. Please use `encrypt_file` instead.\");\r\n    }\r\n\r\n    const alg = \"AES-GCM\";\r\n\r\n    // (4) \u52A0\u5BC6\u6D88\u606F\r\n    const ciphertext = await crypto.subtle.encrypt(\r\n        {\r\n            name: alg,\r\n            iv: iv\r\n        },\r\n        cipher,\r\n        str_encode(message)\r\n    );\r\n\r\n    // \u7EC4\u5408IV + \u5BC6\u6587 + \u8BA4\u8BC1\u6807\u7B7E\r\n    const encrypted_message = new Uint8Array(iv.length + ciphertext.byteLength);\r\n    encrypted_message.set(iv, 0);\r\n    encrypted_message.set(new Uint8Array(ciphertext), iv.length);\r\n    const message_encrypted = hexlify(encrypted_message);\r\n\r\n    const v = 5.6;\r\n\r\n    // \u8FD4\u56DE\u6570\u636E\r\n    return `:${message_encrypted}:${parameter}:${N}:${v}:${alg}:`;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} message_encrypted\r\n */\r\nexport async function parse_ciphertext(message_encrypted) {\r\n    if (typeof message_encrypted !== \"string\") throw new Exceptions.InvalidParameterException(\"The message is not a string.\");\r\n    let jsoned;\r\n    if (message_encrypted.charAt(0) === ':') {\r\n        const arr = message_encrypted.split(':');\r\n        if (arr.length !== 8) throw new Exceptions.BadDataException('The message is bad.');\r\n        const [, data, phrase, salt, N, v, a,] = arr;\r\n        jsoned = { data, phrase, salt, N: +N, v: +v, a };\r\n    } else {\r\n        jsoned = safeparse(message_encrypted);\r\n    }\r\n    const N = parseInt(jsoned.N);\r\n    const alg = jsoned.a;\r\n    CheckAlgorithm(alg);\r\n\r\n    // \u5C06\u5341\u516D\u8FDB\u5236\u5B57\u7B26\u4E32\u8F6C\u6362\u56DE\u5B57\u8282\r\n    const encrypted_data = unhexlify(jsoned.data);\r\n    let phrase, salt_b64;\r\n    if (jsoned.parameter) [phrase, salt_b64] = jsoned.parameter.split(':');\r\n    else {\r\n        phrase = jsoned.phrase; salt_b64 = jsoned.salt;\r\n    }\r\n    const salt = unhexlify(salt_b64);\r\n\r\n    if (isNaN(N) || !phrase || ('string' !== typeof phrase) || !encrypted_data || !salt)\r\n        throw new Exceptions.BadDataException('The message or parameters are bad.')\r\n    if (encrypted_data.length < 28)\r\n        throw new Exceptions.BadDataException(\"The message was too short.\");\r\n\r\n    // \u63D0\u53D6 IV (\u524D12\u5B57\u8282)\u3001\u5BC6\u6587\u548C\u8BA4\u8BC1\u6807\u7B7E(\u6700\u540E16\u5B57\u8282)\r\n    const iv = encrypted_data.slice(0, 12);\r\n    const ciphertext = encrypted_data.slice(12, -16);\r\n    const tag = encrypted_data.slice(-16);\r\n\r\n    return { iv, ciphertext, tag, phrase, salt, N };\r\n}\r\n\r\n/**\r\n * @param {string} message_encrypted\r\n * @param {string|Uint8Array} key\r\n */\r\nexport async function decrypt_data(message_encrypted, key) {\r\n    const { iv, ciphertext, tag, phrase, salt, N } = await parse_ciphertext(message_encrypted);\r\n\r\n    const derived_key = (typeof key === \"string\") ?\r\n        ((await derive_key(key, iv, phrase, N, salt)).derived_key) :\r\n        (key);\r\n    if (!(derived_key instanceof Uint8Array)) throw new Exceptions.InvalidParameterException(\"The key is not valid.\");\r\n\r\n    const cipher = await crypto.subtle.importKey(\"raw\", derived_key, \"AES-GCM\", false, [\"decrypt\"]);\r\n\r\n    try {\r\n        const decrypted_data = await crypto.subtle.decrypt(\r\n            {\r\n                name: \"AES-GCM\",\r\n                iv: iv,\r\n            },\r\n            cipher,\r\n            new Uint8Array([...ciphertext, ...tag])\r\n        );\r\n\r\n        try {\r\n            return str_decode(decrypted_data);\r\n        } catch {\r\n            throw new Exceptions.OperationNotPermittedException(\"The ability to directly decrypt binary data has been removed in the new version. If you have encrypted binary data, please recover it using the old version.\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (!e || !(e instanceof DOMException)) throw new Exceptions.InternalError(`Internal error.`, { cause: e });\r\n        const name = e.name;\r\n        if (name === 'InvalidAccessError') throw new Exceptions.InvalidParameterException('InvalidAccessError.', { cause: e });\r\n        if (name === 'OperationError') throw new Exceptions.CannotDecryptException('Cannot decrypt. Did you provide the correct password?', { cause: e });\r\n        throw new Exceptions.InternalError(`Unexpected error.`, { cause: e });\r\n    }\r\n}\r\n\r\n", "import { hexlify, unhexlify } from \"./binascii.js\";\r\nimport { get_random_bytes, get_random_uint8_number } from \"./random.js\";\r\nimport { str_decode, str_encode } from \"./str.js\";\r\nimport * as Exceptions from './exceptions.js';\r\nimport { scrypt } from './scrypt-layer/entrance.js';\r\nimport { decrypt_data } from \"./encrypt_data.js\";\r\nimport { GetFileVersion, ENCRYPTION_FILE_VER_1_1_0, PADDING_SIZE, CheckAlgorithm, ENCRYPTION_FILE_VER_1_2_10020 } from \"./internal-util.js\";\r\n\r\nexport const deriveKey__phrases = ['Furina', 'Neuvillette', 'Venti', 'Nahida', 'Kinich', 'Kazuha'];\r\n/**\r\n * Derive a key from a phrase and a key.\r\n * @param {string} key \r\n * @param {Uint8Array} iv \r\n * @param {?string} phrase \r\n * @param {?number} N \r\n * @param {?Uint8Array} salt \r\n * @param {number} r \r\n * @param {number} p \r\n * @param {number} dklen \r\n */\r\nexport async function derive_key(key, iv, phrase = null, N = null, salt = null, r = 8, p = 1, dklen = 32) {\r\n    if (N === null) N = 262144;\r\n    if (typeof N !== \"number\" || N > 4194304 || r < 1 || p < 1 || typeof r !== \"number\" || typeof p !== \"number\" || typeof dklen !== \"number\") {\r\n        throw new Exceptions.InvalidScryptParameterException();\r\n    }\r\n    if (typeof key !== \"string\") throw new Exceptions.InvalidParameterException(\"key must be a string\");\r\n    if (!(iv instanceof Uint8Array)) throw new Exceptions.InvalidParameterException(\"iv must be a Uint8Array\");\r\n    if (phrase !== null && typeof phrase !== \"string\") throw new Exceptions.InvalidParameterException(\"phrase must be a string\");\r\n\r\n    // (2) \u751F\u6210salt\r\n    if (!salt) {\r\n        salt = get_random_bytes(64);\r\n    }\r\n\r\n    // \u5904\u7406phrase\r\n    if (!phrase) {\r\n        phrase = deriveKey__phrases[(get_random_uint8_number()) % deriveKey__phrases.length];\r\n    }\r\n    if (phrase.includes(\":\")) {\r\n        throw new Exceptions.InvalidParameterException(\"phrase must not contain \\\":\\\"\");\r\n    }\r\n\r\n    const parameter = `${phrase}:${hexlify(salt)}`;\r\n\r\n    // (3) \u751F\u6210\u52A0\u5BC6\u5BC6\u94A5\r\n    const keyInput = `MyEncryption/1.1 Fontaine/4.2 Iv/${hexlify(iv)} user_parameter=${parameter} user_key=${key}`;\r\n\r\n    // \u4F7F\u7528Scrypt\u8FDB\u884C\u5BC6\u94A5\u6D3E\u751F(pycryptodome\u6CA1\u6709PBKDF2HMAC\uFF0C\u4F7F\u7528Scrypt\u4F5C\u4E3A\u66FF\u4EE3)\r\n    // AES-256\u9700\u898132\u5B57\u8282\u5BC6\u94A5\r\n    /**\r\n     * @type {Uint8Array}\r\n     */\r\n    const derived_key = await scrypt(str_encode(keyInput), salt, N, r, p, dklen)\r\n\r\n    return ({ derived_key, parameter, N });\r\n}\r\n\r\n\r\n/**\r\n * Derive a key for a file.\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader \r\n * @param {string} user_key \r\n */\r\nexport async function derive_key_for_file(file_reader, user_key) {\r\n    let read_pos = 16 + 4;\r\n    const version = await GetFileVersion(file_reader);\r\n\r\n    if (version === ENCRYPTION_FILE_VER_1_1_0) {\r\n        throw new Exceptions.NotSupportedException(\"Deriving a key for V1.1 files is not supported\");\r\n    }\r\n    if (version !== ENCRYPTION_FILE_VER_1_2_10020) {\r\n        throw new Exceptions.EncryptionVersionMismatchException();\r\n    }\r\n\r\n    const ekey_len = new DataView((await file_reader(read_pos, read_pos + 4)).buffer).getUint32(0, true);\r\n    const ekey = str_decode(await file_reader(read_pos + 4, read_pos + 4 + ekey_len));\r\n\r\n    read_pos += PADDING_SIZE;\r\n    \r\n    if (ekey_len > PADDING_SIZE) {\r\n        throw new Exceptions.InternalError(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n        \r\n    // \u89E3\u5BC6\u4E3B\u5BC6\u94A5\r\n    const key = await decrypt_data(ekey, user_key);\r\n\r\n    // \u8BFB\u53D6\u5934\u90E8JSON\u957F\u5EA6\r\n    const json_len_bytes = await file_reader(read_pos, read_pos + 4);\r\n    const json_len = new DataView(json_len_bytes.buffer).getUint32(0, true);\r\n    read_pos += 4;\r\n\r\n    // \u89E3\u6790\u5934\u90E8JSON\r\n    const header_json = JSON.parse(\r\n        str_decode(await file_reader(read_pos, read_pos + json_len))\r\n    );\r\n    read_pos += json_len;\r\n\r\n    // \u63D0\u53D6\u6D3E\u751F\u53C2\u6570\r\n    const header_version = header_json.v;\r\n    if (!([5.5].includes(header_version))) throw new Exceptions.EncryptionVersionMismatchException();\r\n    const [phrase, salt_hex] = header_json.parameter.split(':');\r\n    const salt = unhexlify(salt_hex);\r\n    const iv4key = unhexlify(header_json.iv);\r\n    const N = header_json.N;\r\n    const algorithm = header_json.a;\r\n\r\n    // \u5224\u65AD\u662F\u5426\u652F\u6301\u7684\u52A0\u5BC6\u7B97\u6CD5\r\n    CheckAlgorithm(algorithm);\r\n\r\n    return ((await derive_key(key, iv4key, phrase, N, salt)).derived_key);\r\n}\r\n\r\n\r\nexport async function scrypt_hex(key, salt, N, r, p, dklen) {\r\n    return hexlify(await scrypt(str_encode(key), str_encode(salt), N, r, p, dklen));\r\n}\r\n\r\nexport { scrypt };", "import { derive_key } from \"./derive_key.js\";\r\nimport { hexlify, unhexlify } from \"./binascii.js\";\r\nimport { get_random_bytes } from \"./random.js\";\r\nimport { str_encode, str_decode } from \"./str.js\";\r\nimport { encrypt_data, decrypt_data } from \"./encrypt_data.js\";\r\nimport * as Exceptions from './exceptions.js';\r\n\r\nimport {\r\n    normalize_version, ENCRYPTION_FILE_VER_1_1_0, ENCRYPTION_FILE_VER_1_2_10020,\r\n    PADDING_SIZE,\r\n    END_IDENTIFIER, TAIL_BLOCK_MARKER, END_MARKER, FILE_END_MARKER,\r\n    nextTick,\r\n    GetFileVersion,\r\n    CheckAlgorithm,\r\n    POWER_2_64,\r\n} from \"./internal-util.js\";\r\nexport { normalize_version, ENCRYPTION_FILE_VER_1_1_0, ENCRYPTION_FILE_VER_1_2_10020 };\r\n    \r\nconst crypto = globalThis.crypto; // To avoid the possible security risk\r\n\r\n\r\n/**\r\n * \u52A0\u5BC6\u6587\u4EF6\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n * @param {(data: Uint8Array) => Promise<void>} file_writer - \u6587\u4EF6\u5199\u5165\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0write(Uint8Array)\u65B9\u6CD5\r\n * @param {string} user_key - \u7528\u6237\u5BC6\u94A5\r\n * @param {((progress: number) => void)|null} callback - \u53EF\u9009\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u62A5\u544A\u52A0\u5BC6\u8FDB\u5EA6\r\n * @param {string|null} phrase - \u53EF\u9009\u77ED\u8BED\uFF0C\u7528\u4E8E\u5BC6\u94A5\u6D3E\u751F\r\n * @param {number|null} N - scrypt\u53C2\u6570N\r\n * @param {number} chunk_size - \u5206\u5757\u5927\u5C0F\uFF0C\u9ED8\u8BA4\u4E3A32MiB\r\n * @returns {Promise<boolean>} \u8FD4\u56DE\u52A0\u5BC6\u662F\u5426\u6210\u529F\r\n */\r\nexport async function encrypt_file(file_reader, file_writer, user_key, callback = null, phrase = null, N = null, chunk_size = 32 * 1024 * 1024) {\r\n    if (!chunk_size) throw new Exceptions.InvalidParameterException('chunk_size must be greater than 0.');\r\n\r\n    // \u5199\u5165\u6587\u4EF6\u5934\u6807\u8BC6\u548C\u7248\u672C (16\u5B57\u8282)\r\n    await file_writer(str_encode('MyEncryption/1.2'));\r\n\r\n    // \u5199\u5165\u7248\u672C\u6807\u8BC6\u7B26\r\n    const VERSION_MARKER = 10020;\r\n    const versionMarkerBuffer = new ArrayBuffer(4);\r\n    new DataView(versionMarkerBuffer).setUint32(0, VERSION_MARKER, true);\r\n    await file_writer(new Uint8Array(versionMarkerBuffer));\r\n\r\n    // \u4EA7\u751F\u4E3B\u5BC6\u94A5\r\n    const key = hexlify(get_random_bytes(128));\r\n    // N\u5728\u8FD9\u91CC\u88AB\u4F7F\u7528\r\n    const ekey = await encrypt_data(key, user_key, phrase, N);\r\n    const ekey_bytes = str_encode(ekey);\r\n    // \u5BF9\u4E8E128\u5B57\u8282\u7684\u968F\u673A\u4E3B\u5BC6\u94A5\uFF0C\u6211\u4EEC\u5728\u4E0B\u9762\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528\u8FC7\u9AD8\u7684N\u3002\r\n    N = 8192; // \u964D\u4F4E\u6587\u4EF6\u5185\u5BB9\u7684N\u4EE5\u63D0\u5347\u6027\u80FD\r\n\r\n    // \u68C0\u67E5\u957F\u5EA6\r\n    if (ekey_bytes.length > PADDING_SIZE) {\r\n        throw new Exceptions.InternalError(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n\r\n    // \u5199\u5165\u4E3B\u5BC6\u94A5\u5BC6\u6587\u957F\u5EA6(4\u5B57\u8282)\u548C\u5185\u5BB9\uFF0C\u586B\u5145\u5230PADDING_SIZE\u5B57\u8282\r\n    const lengthBuffer = new ArrayBuffer(4);\r\n    new DataView(lengthBuffer).setUint32(0, ekey_bytes.length, true);\r\n    await file_writer(new Uint8Array(lengthBuffer));\r\n    await file_writer(ekey_bytes);\r\n\r\n    // \u586B\u5145\u5269\u4F59\u7A7A\u95F4\r\n    const padding = new Uint8Array(PADDING_SIZE - ekey_bytes.length - 4).fill(0);\r\n    await file_writer(padding);\r\n\r\n    // \u751F\u6210\u521D\u59CBIV\u7528\u4E8E\u6D3E\u751F\u5BC6\u94A5 (12\u5B57\u8282)\r\n    callback?.(0); await nextTick();\r\n    const iv_for_key = get_random_bytes(12);\r\n    const { derived_key, parameter, N: N2 } = await derive_key(key, iv_for_key, phrase, N);\r\n    N = N2;\r\n\r\n    // \u51C6\u5907\u5934\u90E8JSON\u6570\u636E\r\n    // \u6CE8\u610F\uFF1A\u5B89\u5168\u6027\u4E3B\u8981\u4F9D\u9760\u4E3B\u5BC6\u94A5\u3002\u5B9E\u9645\u4E0A\u5BF9\u4E8E64\u5B57\u8282\u7684\u968F\u673A\u4E3B\u5BC6\u94A5\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528\u8FC7\u9AD8\u7684N\u3002\r\n    const header_data = {\r\n        \"parameter\": parameter,\r\n        \"N\": N,\r\n        \"v\": 5.5,\r\n        \"a\": \"AES-GCM\",\r\n        \"iv\": hexlify(iv_for_key)\r\n    };\r\n    const header_json = str_encode(JSON.stringify(header_data));\r\n\r\n    // \u5199\u5165JSON\u957F\u5EA6(4\u5B57\u8282)\u548CJSON\u6570\u636E\r\n    const headerLengthBuffer = new ArrayBuffer(4);\r\n    new DataView(headerLengthBuffer).setUint32(0, header_json.length, true);\r\n    await file_writer(new Uint8Array(headerLengthBuffer));\r\n    await file_writer(header_json);\r\n\r\n    // \u5199\u5165chunk size\u53C2\u6570\r\n    const chunkSizeBuffer = new ArrayBuffer(8);\r\n    new DataView(chunkSizeBuffer).setBigUint64(0, BigInt(chunk_size), true);\r\n    await file_writer(new Uint8Array(chunkSizeBuffer));\r\n\r\n    let total_bytes = 0; // \u7528\u4E8E\u7EDF\u8BA1\u603B\u5B57\u8282\u6570\r\n    let nonce_counter = BigInt(1);\r\n    let position = 0;\r\n\r\n    // \u5199\u5165iv\u53C2\u6570\r\n    const nonce_counter_start = new ArrayBuffer(8);\r\n    new DataView(nonce_counter_start).setBigUint64(0, nonce_counter, true);\r\n    await file_writer(new Uint8Array(nonce_counter_start));\r\n\r\n    // \u5206\u5757\u52A0\u5BC6\u5904\u7406\r\n    callback?.(0);\r\n    const cryptoKey = await crypto.subtle.importKey('raw', derived_key, { name: 'AES-GCM' }, false, ['encrypt']);\r\n    while (true) {\r\n        // \u8BFB\u53D6\u6587\u4EF6\u5757\r\n        const chunk = await file_reader(position, position + chunk_size);\r\n        // chunk should be a Uint8Array\r\n        if (!(chunk instanceof Uint8Array)) throw new Exceptions.BadDataException(\"The file chunk is not a Uint8Array.\");\r\n        if (chunk.length === 0) break;\r\n        const isFinalChunk = chunk.length < chunk_size;\r\n\r\n        // \u4E3A\u6BCF\u4E2A\u5206\u5757\u751F\u6210\u65B0IV (12\u5B57\u8282)\r\n        const iv = new ArrayBuffer(12);\r\n        // \u786E\u4FDD IV \u552F\u4E00\r\n        if (nonce_counter >= POWER_2_64) {\r\n            throw new Exceptions.IVException(\"nonce_counter exceeded the maximum value.\");\r\n        }\r\n        new DataView(iv).setBigUint64(4, nonce_counter, true); // \u5199\u51658\u5B57\u8282\u8BA1\u6570\u5668\r\n        nonce_counter++; // \u8BA1\u6570\u5668\u52A01\r\n\r\n        if (isFinalChunk) {\r\n            await file_writer(new Uint8Array(TAIL_BLOCK_MARKER));\r\n            // \u5199\u5165\u8BE5\u5206\u5757\u957F\u5EA6\r\n            const chunkLengthBuffer = new ArrayBuffer(8);\r\n            new DataView(chunkLengthBuffer).setBigUint64(0, BigInt(chunk.length), true);\r\n            await file_writer(new Uint8Array(chunkLengthBuffer));\r\n        }\r\n\r\n        // \u4F7F\u7528WebCrypto\u8FDB\u884C\u52A0\u5BC6\r\n        const ivArray = new Uint8Array(iv);\r\n        const ciphertext = await crypto.subtle.encrypt(\r\n            {\r\n                name: 'AES-GCM',\r\n                iv: ivArray,\r\n            },\r\n            cryptoKey,\r\n            chunk\r\n        );\r\n\r\n        // \u5199\u5165\u5206\u5757\u4FE1\u606F: \u5BC6\u6587 + tag(16\u5B57\u8282)\r\n        // \u5BC6\u6587\u7684\u957F\u5EA6\u548C\u539F\u6587\u76F8\u540C\r\n        const ciphertextArray = new Uint8Array(ciphertext);\r\n        await file_writer(ciphertextArray);\r\n\r\n        total_bytes += chunk.length;\r\n        position += chunk.length;\r\n\r\n        callback?.(total_bytes);\r\n    }\r\n\r\n    // \u5199\u5165\u7ED3\u675F\u6807\u8BB0\u548C\u603B\u5B57\u8282\u6570\r\n    await file_writer(new Uint8Array(END_MARKER));\r\n\r\n    const totalBytesBuffer = new ArrayBuffer(8);\r\n    new DataView(totalBytesBuffer).setBigUint64(0, BigInt(total_bytes), true);\r\n    await file_writer(new Uint8Array(totalBytesBuffer));\r\n    await file_writer(new Uint8Array(FILE_END_MARKER));\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * \u89E3\u5BC6\u6587\u4EF6\uFF081.1\uFF09\r\n * @deprecated \u4EC5\u4F9B\u517C\u5BB91.1\u7248\u672C\u4F7F\u7528\u3002\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n * @param {Function} file_writer - \u6587\u4EF6\u5199\u5165\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0write(Uint8Array)\u65B9\u6CD5\r\n * @param {((progress: number) => void)|null} callback - \u53EF\u9009\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u62A5\u544A\u52A0\u5BC6\u8FDB\u5EA6\r\n * @param {string} user_key - \u7528\u6237\u63D0\u4F9B\u7684\u89E3\u5BC6\u5BC6\u94A5\r\n * @param {Function} [callback=null] - \u8FDB\u5EA6\u56DE\u8C03\u51FD\u6570\r\n * @returns {Promise<boolean>} \u8FD4\u56DE\u89E3\u5BC6\u662F\u5426\u6210\u529F\r\n */\r\nexport async function decrypt_file_V_1_1_0(file_reader, file_writer, user_key, callback = null) {\r\n    // \u8BFB\u53D6\u6587\u4EF6\u5934\u5E76\u9A8C\u8BC1\r\n    const header = await file_reader(0, 16);\r\n    if (str_decode(header) !== 'MyEncryption/1.1') {\r\n        throw new TypeError(\"Invalid file format\");\r\n    }\r\n    let read_pos = 16;\r\n\r\n    // \u8BFB\u53D6\u4E3B\u5BC6\u94A5\u5BC6\u6587\u957F\u5EA6\r\n    const ekey_len_bytes = await file_reader(read_pos, read_pos + 4);\r\n    const ekey_len = new DataView(ekey_len_bytes.buffer).getUint32(0, true);\r\n    read_pos += 4;\r\n\r\n    // \u8BFB\u53D6\u4E3B\u5BC6\u94A5\u5BC6\u6587\u5E76\u8DF3\u8FC7\u586B\u5145\r\n    const ekey = str_decode(await file_reader(read_pos, read_pos + ekey_len));\r\n    read_pos += 1024; // \u76F4\u63A5\u8DF3\u8FC71024\u5B57\u8282\u533A\u57DF\r\n\r\n    // \u89E3\u5BC6\u4E3B\u5BC6\u94A5\r\n    const key = await decrypt_data(ekey, user_key);\r\n\r\n    // \u8BFB\u53D6\u5934\u90E8JSON\u957F\u5EA6\r\n    const json_len_bytes = await file_reader(read_pos, read_pos + 4);\r\n    const json_len = new DataView(json_len_bytes.buffer).getUint32(0, true);\r\n    read_pos += 4;\r\n\r\n    // \u89E3\u6790\u5934\u90E8JSON\r\n    const header_json = JSON.parse(\r\n        str_decode(await file_reader(read_pos, read_pos + json_len))\r\n    );\r\n    read_pos += json_len;\r\n\r\n    // \u63D0\u53D6\u6D3E\u751F\u53C2\u6570\r\n    const [phrase, salt_hex] = header_json.parameter.split(':');\r\n    const salt = unhexlify(salt_hex);\r\n    const iv4key = unhexlify(header_json.iv);\r\n    const N = header_json.N;\r\n\r\n    // \u5BF9\u5E94\u52A0\u5BC6\u65F6\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E2Aiv\uFF0C\u6211\u4EEC\u628Aiv\u53D6\u56DE\u6765\uFF0C\u91CD\u65B0\u751F\u6210\u5BC6\u94A5\uFF08\u6240\u6709\u6570\u636E\u5757\u7684\u5BC6\u94A5\u662F\u76F8\u540C\u7684\uFF09\r\n    callback?.(0);\r\n    await nextTick();\r\n    const { derived_key } = await derive_key(key, iv4key, phrase, N, salt);\r\n\r\n    let total_bytes = 0;\r\n    // \u5206\u5757\u89E3\u5BC6\u5FAA\u73AF\r\n    const cryptoKey = await crypto.subtle.importKey('raw', derived_key, { name: 'AES-GCM' }, false, ['decrypt']);\r\n    while (true) {\r\n        // \u8BFB\u53D6\u5206\u5757\u957F\u5EA6\u6807\u8BB0\r\n        const chunk_len_bytes = await file_reader(read_pos, read_pos + 8);\r\n        read_pos += 8;\r\n\r\n        // \u68C0\u67E5\u7ED3\u675F\u6807\u8BB0\r\n        if (chunk_len_bytes.every((v, i) =>\r\n            v === [0xFF, 0xFD, 0xF0, 0x10, 0x13, 0xD0, 0x12, 0x18][i]\r\n        )) break;\r\n\r\n        // \u89E3\u6790\u5206\u5757\u957F\u5EA6\r\n        const chunk_len = Number(\r\n            new DataView(chunk_len_bytes.buffer).getBigUint64(0, true)\r\n        );\r\n\r\n        // \u8BFB\u53D6IV(12\u5B57\u8282)\u3001\u5BC6\u6587\u548Ctag(16\u5B57\u8282)\r\n        const iv = await file_reader(read_pos, read_pos + 12);\r\n        read_pos += 12;\r\n        const ciphertext = await file_reader(read_pos, read_pos + chunk_len + 16);\r\n        read_pos += chunk_len + 16;\r\n\r\n        const full_ciphertext = ciphertext;\r\n\r\n        // \u4F7F\u7528WebCrypto\u89E3\u5BC6\r\n        const decrypted = await crypto.subtle.decrypt(\r\n            {\r\n                name: 'AES-GCM',\r\n                iv: iv,\r\n            },\r\n            cryptoKey,\r\n            full_ciphertext\r\n        );\r\n\r\n        // \u5199\u5165\u89E3\u5BC6\u540E\u7684\u6570\u636E\r\n        await file_writer(new Uint8Array(decrypted));\r\n        total_bytes += decrypted.byteLength;\r\n        if (callback) callback(total_bytes);\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u603B\u5B57\u8282\u6570\u548C\u7ED3\u675F\u6807\u8BB0\r\n    const total_bytes_bytes = await file_reader(read_pos, read_pos + 8);\r\n    const total_bytes_decrypted = Number(\r\n        new DataView(total_bytes_bytes.buffer).getBigUint64(0, true)\r\n    );\r\n    read_pos += 8;\r\n\r\n    const end_marker = await file_reader(read_pos, read_pos + 2);\r\n    if (total_bytes !== total_bytes_decrypted) throw new Exceptions.FileCorruptedException(\"File corrupted: total bytes mismatch\")\r\n    if (!end_marker.every((v, i) => v === [0x55, 0xAA][i])) throw new Exceptions.InvalidEndMarkerException(\"Invalid end marker\");\r\n\r\n    return true;\r\n}\r\n/**\r\n * \u89E3\u5BC6\u6587\u4EF6\r\n * @param {(start: number, end: number) => Promise<Uint8Array>} file_reader - \u6587\u4EF6\u8BFB\u53D6\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0(start: number, end: number) => Promise<Uint8Array>\r\n * @param {(data: Uint8Array) => Promise<void>} file_writer - \u6587\u4EF6\u5199\u5165\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u5B9E\u73B0write(Uint8Array)\u65B9\u6CD5\r\n * @param {string|Uint8Array} user_key - \u7528\u6237\u63D0\u4F9B\u7684\u89E3\u5BC6\u5BC6\u94A5\uFF08\u5B57\u7B26\u4E32\uFF09\u6216\u8005\u6D3E\u751F\u540E\u7684\u5BC6\u94A5\uFF08Uint8Array\uFF09\r\n * @param {((progress: number) => void)|null} callback - \u53EF\u9009\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u62A5\u544A\u52A0\u5BC6\u8FDB\u5EA6\r\n * @returns {Promise<boolean>} \u8FD4\u56DE\u89E3\u5BC6\u662F\u5426\u6210\u529F\r\n */\r\nexport async function decrypt_file(file_reader, file_writer, user_key, callback = null) {\r\n    // \u8003\u8651\u5230JavaScript\u4E00\u822C\u4E0D\u4F1A\u5904\u74062^53\u6570\u91CF\u7EA7\u7684\u6587\u4EF6\uFF0C\u6211\u4EEC\u5BF9read_pos\u4F7F\u7528number\u800C\u4E0D\u662Fbigint\r\n    let read_pos = 16 + 4;\r\n    const version = await GetFileVersion(file_reader);\r\n\r\n    if (version === ENCRYPTION_FILE_VER_1_1_0) {\r\n        if (typeof user_key !== 'string') throw new Exceptions.NotSupportedException(\"operation not supported\");\r\n        return await decrypt_file_V_1_1_0(file_reader, file_writer, user_key, callback);\r\n    }\r\n\r\n    const ekey_len = new DataView((await file_reader(read_pos, read_pos + 4)).buffer).getUint32(0, true);\r\n    const ekey = str_decode(await file_reader(read_pos + 4, read_pos + 4 + ekey_len));\r\n\r\n    read_pos += PADDING_SIZE;\r\n    \r\n    if (ekey_len > PADDING_SIZE) {\r\n        throw new Exceptions.InternalError(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n        \r\n    // \u89E3\u5BC6\u4E3B\u5BC6\u94A5\r\n    const key = (typeof user_key === 'string') ? await decrypt_data(ekey, user_key) : null;\r\n\r\n    // \u8BFB\u53D6\u5934\u90E8JSON\u957F\u5EA6\r\n    const json_len_bytes = await file_reader(read_pos, read_pos + 4);\r\n    const json_len = new DataView(json_len_bytes.buffer).getUint32(0, true);\r\n    read_pos += 4;\r\n\r\n    // \u89E3\u6790\u5934\u90E8JSON\r\n    const header_json = JSON.parse(\r\n        str_decode(await file_reader(read_pos, read_pos + json_len))\r\n    );\r\n    read_pos += json_len;\r\n\r\n    // \u63D0\u53D6\u6D3E\u751F\u53C2\u6570\r\n    const header_version = header_json.v;\r\n    if (!([5.5].includes(header_version))) throw new Exceptions.EncryptionVersionMismatchException();\r\n    const [phrase, salt_hex] = header_json.parameter.split(':');\r\n    const salt = unhexlify(salt_hex);\r\n    const iv4key = unhexlify(header_json.iv);\r\n    const N = header_json.N;\r\n    const algorithm = header_json.a;\r\n\r\n    // \u5224\u65AD\u662F\u5426\u652F\u6301\u7684\u52A0\u5BC6\u7B97\u6CD5\r\n    CheckAlgorithm(algorithm);\r\n\r\n    // \u83B7\u53D6chunk size\u548Civ\u53C2\u6570\r\n    const chunk_size = Number(new DataView((await file_reader(read_pos, read_pos + 8)).buffer).getBigUint64(0, true));\r\n    let nonce_counter = BigInt(new DataView((await file_reader(read_pos + 8, read_pos + 16)).buffer).getBigUint64(0, true));\r\n    read_pos += 16;\r\n\r\n    // \u5BF9\u5E94\u52A0\u5BC6\u65F6\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E2Aiv\uFF0C\u6211\u4EEC\u628Aiv\u53D6\u56DE\u6765\uFF0C\u91CD\u65B0\u751F\u6210\u5BC6\u94A5\uFF08\u6240\u6709\u6570\u636E\u5757\u7684\u5BC6\u94A5\u662F\u76F8\u540C\u7684\uFF09\r\n    callback?.(0);\r\n    await nextTick();\r\n    const derived_key = (typeof user_key === 'string') ? (\r\n        key ? ((await derive_key(key, iv4key, phrase, N, salt)).derived_key) : Exceptions.raise(new Exceptions.InternalError())\r\n    ) : user_key;\r\n\r\n    let total_bytes = 0, is_final_chunk = false;\r\n    // \u5206\u5757\u89E3\u5BC6\u5FAA\u73AF\r\n    const cryptoKey = await crypto.subtle.importKey('raw', derived_key, { name: 'AES-GCM' }, false, ['decrypt']);\r\n    while (true) {\r\n        // \u8BFB\u53D6\u5206\u5757\u957F\u5EA6\u6807\u8BB0\r\n        const chunk_tag = await file_reader(read_pos, read_pos + 8);\r\n\r\n        // \u68C0\u67E5\u7ED3\u675F\u6807\u8BB0\r\n        let real_size = 0;\r\n        if ((chunk_tag).every((v, i) => v === END_IDENTIFIER[i])) {\r\n            const full_bytes = await file_reader(read_pos, read_pos + 32); // \u8BFB\u53D6\u5B8C\u6574\u6807\u8BB0\r\n            if (full_bytes.every((v, i) => v === END_MARKER[i])) {\r\n                read_pos += 32; // \u8DF3\u8FC7\u6807\u8BB0\r\n                break;\r\n            }\r\n            if (full_bytes.every((v, i) => v === TAIL_BLOCK_MARKER[i])) {\r\n                is_final_chunk = true;\r\n                read_pos += 32; // \u8DF3\u8FC7\u6807\u8BB0\r\n                // \u8BFB\u53D6\u5206\u5757\u957F\u5EA6\r\n                const chunk_len_bytes = await file_reader(read_pos, read_pos + 8);\r\n                read_pos += 8;\r\n                real_size = Number(new DataView(chunk_len_bytes.buffer).getBigUint64(0, true));\r\n                if (real_size === 0) break; // \u8BFB\u53D6\u52300\u5B57\u8282\uFF0C\u7ED3\u675F\u5FAA\u73AF\r\n            }\r\n        }\r\n\r\n        // \u89E3\u6790\u5206\u5757\u957F\u5EA6\uFF08\u4E0D\u5305\u62EC16\u5B57\u8282\u6807\u7B7E\uFF09\r\n        const ciphertext_length = (is_final_chunk ? real_size : chunk_size)\r\n\r\n        // \u83B7\u53D6iv\r\n        const iv_array = new ArrayBuffer(12);\r\n        new DataView(iv_array).setBigUint64(4, BigInt(nonce_counter), true);\r\n        nonce_counter++;\r\n        \r\n        // \u8BFB\u53D6\u5BC6\u6587\u548Ctag(16\u5B57\u8282)\r\n        const ciphertext = await file_reader(read_pos, read_pos + ciphertext_length + 16);\r\n        read_pos += ciphertext_length + 16;\r\n\r\n        const full_ciphertext = ciphertext;\r\n\r\n        // \u4F7F\u7528WebCrypto\u89E3\u5BC6\r\n        try {\r\n            const decrypted = await crypto.subtle.decrypt(\r\n                {\r\n                    name: 'AES-GCM',\r\n                    iv: new Uint8Array(iv_array),\r\n                },\r\n                cryptoKey,\r\n                full_ciphertext\r\n            );\r\n\r\n            // \u5199\u5165\u89E3\u5BC6\u540E\u7684\u6570\u636E\r\n            await file_writer(new Uint8Array(decrypted));\r\n            total_bytes += decrypted.byteLength;\r\n        } catch (e) {\r\n            if (!e || !(e instanceof DOMException)) throw new Exceptions.InternalError(`Internal error.`, { cause: e });\r\n            const name = e.name;\r\n            if (name === 'InvalidAccessError') throw new Exceptions.InvalidParameterException('InvalidAccessError.', { cause: e });\r\n            if (name === 'OperationError') throw new Exceptions.UnexpectedFailureInChunkDecryptionException(undefined, { cause: e });\r\n            throw new Exceptions.InternalError(`Unexpected error.`, { cause: e });\r\n        }\r\n        if (callback) callback(total_bytes);\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u603B\u5B57\u8282\u6570\u548C\u7ED3\u675F\u6807\u8BB0\r\n    const total_bytes_bytes = await file_reader(read_pos, read_pos + 8);\r\n    const total_bytes_decrypted = Number(\r\n        new DataView(total_bytes_bytes.buffer).getBigUint64(0, true)\r\n    );\r\n    read_pos += 8;\r\n\r\n    const end_marker = await file_reader(read_pos, read_pos + FILE_END_MARKER.length);\r\n    if (total_bytes !== total_bytes_decrypted) throw new Exceptions.FileCorruptedException(\"total bytes mismatch\")\r\n    if (!end_marker.every((v, i) => v === FILE_END_MARKER[i])) throw new Exceptions.InvalidEndMarkerException();\r\n\r\n    return true;\r\n}\r\n\r\n\r\n/**\r\n * @param {Blob} blob\r\n * @param {string} password\r\n * @param {((progress: number) => void)|null} callback - \u53EF\u9009\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u62A5\u544A\u52A0\u5BC6\u8FDB\u5EA6\r\n * @param {string|null} phrase - \u53EF\u9009\u77ED\u8BED\uFF0C\u7528\u4E8E\u5BC6\u94A5\u6D3E\u751F\r\n * @param {number|null} N - scrypt\u53C2\u6570N\r\n * @param {number} chunk_size - \u5206\u5757\u5927\u5C0F\uFF0C\u9ED8\u8BA4\u4E3A32MiB\r\n * @returns {Promise<Blob>}\r\n */\r\nexport async function encrypt_blob(blob, password, callback, phrase, N, chunk_size) {\r\n    if (!(blob instanceof Blob)) throw new Exceptions.InvalidParameterException(\"blob must be a Blob\");\r\n    const buffer = [];\r\n    const file_reader = async (/** @type {number} */ start, /** @type {number} */ end) => new Uint8Array(await (blob.slice(start, end).arrayBuffer()));\r\n    const file_writer = async (/** @type {Uint8Array} */ data) => { buffer.push(data) };\r\n    if (!await encrypt_file(file_reader, file_writer, password, callback, phrase, N, chunk_size)) throw new Exceptions.UnexpectedError();\r\n    return new Blob(buffer);\r\n}\r\n/**\r\n * @param {Blob} blob\r\n * @param {string | Uint8Array} password\r\n * @param {((progress: number) => void)|null} callback - \u53EF\u9009\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u62A5\u544A\u52A0\u5BC6\u8FDB\u5EA6\r\n * @returns {Promise<Blob>}\r\n */\r\nexport async function decrypt_blob(blob, password, callback) {\r\n    if (!(blob instanceof Blob)) throw new Exceptions.InvalidParameterException(\"blob must be a Blob\");\r\n    const buffer = [];\r\n    const file_reader = async (/** @type {number} */ start, /** @type {number} */ end) => new Uint8Array(await (blob.slice(start, end).arrayBuffer()));\r\n    const file_writer = async (/** @type {Uint8Array} */ data) => { buffer.push(data) };\r\n    if (!await decrypt_file(file_reader, file_writer, password, callback)) throw new Exceptions.UnexpectedError();\r\n    return new Blob(buffer);\r\n}", "// @ts-nocheck\r\nimport { str_encode, str_decode } from \"./str.js\";\r\nimport { encrypt_data, decrypt_data, parse_ciphertext } from \"./encrypt_data.js\";\r\nimport {\r\n    PADDING_SIZE, normalize_version,\r\n    ENCRYPTION_FILE_VER_1_1_0, ENCRYPTION_FILE_VER_1_2_10020,\r\n    GetFileVersion,\r\n    GetFileInfo,\r\n} from \"./internal-util.js\";\r\nimport * as Exceptions from './exceptions.js';\r\n\r\n\r\n/**\r\n * Export the file's master key.\r\n * @param {Blob} file_head File header. Recommended to provide 5KB. At least provide 1044 bytes(V1.1) or .\r\n * @param {String} current_key current file password\r\n * @param {String} export_key The password to protect the master key\r\n * @returns String exported key\r\n */\r\nexport async function export_master_key(file_head, current_key, export_key) {\r\n    if (!(file_head instanceof Blob)) throw new Exceptions.InvalidParameterException();\r\n    if (typeof current_key !== 'string' || typeof export_key !== 'string') throw new Exceptions.InvalidParameterException();\r\n    if (file_head.size < (1024 + 16 + 4)) throw new Exceptions.BadDataException('Data not enough');\r\n\r\n    // Verify file header\r\n    const version = await GetFileVersion(async (start, end) => {\r\n        return new Uint8Array(await file_head.slice(start, end).arrayBuffer())\r\n    });\r\n\r\n    if (version === ENCRYPTION_FILE_VER_1_1_0) {\r\n        // Read encrypted master key length and ciphertext\r\n        const ekey_len = new DataView(await file_head.slice(16, 20).arrayBuffer()).getUint32(0, true);\r\n        const buffer = await file_head.slice(20, 20 + ekey_len).arrayBuffer();\r\n        const ekey_ciphertext = str_decode(buffer);\r\n        // Decrypt master key with current_key and re-encrypt with export_key\r\n        return await encrypt_data(await decrypt_data(ekey_ciphertext, current_key), export_key);\r\n    }\r\n\r\n    if (version === ENCRYPTION_FILE_VER_1_2_10020) {\r\n        if (file_head.size < 16 + PADDING_SIZE) throw new Exceptions.BadDataException('Data not enough');\r\n        const ekey_len = new DataView(await file_head.slice(20, 24).arrayBuffer()).getUint32(0, true);\r\n        const buffer = await file_head.slice(24, 24 + ekey_len).arrayBuffer();\r\n        const ekey_ciphertext = str_decode(buffer);\r\n        // Decrypt master key with current_key and re-encrypt with export_key\r\n        return await encrypt_data(await decrypt_data(ekey_ciphertext, current_key), export_key);\r\n    }\r\n\r\n    throw new Exceptions.EncryptionVersionMismatchException();\r\n}\r\n\r\n\r\n\r\nasync function change_file_password_1_1_0(file_head, current_key, new_key) {\r\n    if (!(file_head instanceof Blob)) throw new Exceptions.InvalidParameterException();\r\n    if (typeof current_key !== 'string' || typeof new_key !== 'string') throw new Exceptions.InvalidParameterException();\r\n    if (file_head.size < (1024 + 16 + 4)) throw new Exceptions.BadDataException('Data not enough');\r\n\r\n    // Verify file header\r\n    const headerBlob = file_head.slice(0, 16);\r\n    const header = await headerBlob.text();\r\n    if (header !== \"MyEncryption/1.1\") {\r\n        throw new TypeError(\"Invalid file format\");\r\n    }\r\n\r\n    // Read encrypted master key length and ciphertext\r\n    const ekey_len = new DataView(await file_head.slice(16, 20).arrayBuffer()).getUint32(0, true);\r\n    const ekey_ciphertext = str_decode(await file_head.slice(20, 20 + ekey_len).arrayBuffer());\r\n\r\n    // Decrypt master key with current_key and re-encrypt with export_key\r\n    const new_ekey = await encrypt_data(await decrypt_data(ekey_ciphertext, current_key), new_key);\r\n    // Check length\r\n    if (new_ekey.length > 1024) {\r\n        throw new Error(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n    const new_ekey_len = new_ekey.length;\r\n    const new_ekey_len_bytes = new ArrayBuffer(4);\r\n    const new_ekey_len_view = new DataView(new_ekey_len_bytes);\r\n    new_ekey_len_view.setUint32(0, new_ekey_len, true);\r\n\r\n    const new_ekey_parts = [headerBlob, new_ekey_len_bytes, str_encode(new_ekey)];\r\n    const padding = new Uint8Array(1024 - new_ekey.length).fill(0);\r\n    new_ekey_parts.push(padding);\r\n\r\n    return new Blob(new_ekey_parts);\r\n}\r\n/**\r\n * Change file password\r\n * note: \u4E0D\u5EFA\u8BAE\u5728web\u7AEF\u66F4\u6539\u5BC6\u7801\u3002\u7531\u4E8E\u6D4F\u89C8\u5668\u5199\u5165\u6587\u4EF6\u7684\u5DE5\u4F5C\u539F\u7406\uFF08https://developer.mozilla.org/zh-CN/docs/Web/API/FileSystemFileHandle/createWritable \uFF09\r\n * \u4EFB\u4F55\u901A\u8FC7\u5199\u5165\u6D41\u9020\u6210\u7684\u66F4\u6539\u5728\u5199\u5165\u6D41\u88AB\u5173\u95ED\u524D\u90FD\u4E0D\u4F1A\u53CD\u6620\u5230\u6587\u4EF6\u53E5\u67C4\u6240\u4EE3\u8868\u7684\u6587\u4EF6\u4E0A\u3002\u8FD9\u901A\u5E38\u662F\u5C06\u6570\u636E\u5199\u5165\u5230\u4E00\u4E2A\u4E34\u65F6\u6587\u4EF6\u6765\u5B9E\u73B0\u7684\uFF0C\u7136\u540E\u53EA\u6709\u5728\u5199\u5165\u6587\u4EF6\u6D41\u88AB\u5173\u95ED\u540E\u624D\u4F1A\u7528\u4E34\u65F6\u6587\u4EF6\u66FF\u6362\u6389\u6587\u4EF6\u53E5\u67C4\u6240\u4EE3\u8868\u7684\u6587\u4EF6\u3002\r\n * \u4E5F\u5C31\u662F\u8BF4\uFF0C\u65E7\u5BC6\u7801\u5C06\u59CB\u7EC8\u5B58\u5728\u4E8E\u78C1\u76D8\u4E0A\u3002\u8FD9\u5C06\u5BFC\u81F4\u654F\u611F\u6570\u636E\u6CC4\u9732\u3002\r\n * \u53E6\u5916\uFF0C\u7531\u4E8E\u8FD9\u4E2A\u7279\u6027\uFF0C\u5927\u6587\u4EF6\u76F8\u5173\u64CD\u4F5C\u4F1A\u53D8\u5F97\u975E\u5E38\u975E\u5E38\u6162\u3002\r\n * \u6240\u4EE5\uFF0C\u9664\u975E\u7279\u6B8A\u60C5\u51B5\uFF0C\u52A1\u5FC5\u59CB\u7EC8\u4F7F\u7528 native \u5E94\u7528\u7A0B\u5E8F\u6765\u4FEE\u6539\u6587\u4EF6\u5BC6\u7801\r\n * @param {Blob} file_head File header. Recommended to provide 2KB. At least provide 1044 bytes.\r\n * @param {String} current_key current file password\r\n * @param {String} new_key The new password\r\n * @param {?string} phrase phrase. If not provided, the previous value will be used.\r\n * @param {?number} N N. If not provided, the previous value will be used.\r\n * @returns Blob The new file header. Note that the size of the new header differs from the original file. Do not use it to construct a new file. Instead, overwrite the original file header directly with the new header without offsetting the file.  \r\n * @throws {Error} If the file header is invalid or the file size is not enough.\r\n */\r\nexport async function change_file_password(file_head, current_key, new_key, phrase = null, N = null) {\r\n    if (!(file_head instanceof Blob)) throw new Exceptions.InvalidParameterException();\r\n    if (typeof current_key !== 'string' || typeof new_key !== 'string') throw new Exceptions.InvalidParameterException();\r\n    if (file_head.size < (1024 + 16 + 4)) throw new Exceptions.BadDataException('Data not enough');\r\n\r\n    // Verify file header\r\n    const version = await GetFileVersion(async (start, end) => {\r\n        return new Uint8Array(await file_head.slice(start, end).arrayBuffer())\r\n    });\r\n\r\n    if (version === ENCRYPTION_FILE_VER_1_1_0) return await change_file_password_1_1_0(file_head, current_key, new_key);\r\n\r\n    // Read encrypted master key length and ciphertext\r\n    const ekey_len = new DataView(await file_head.slice(20, 24).arrayBuffer()).getUint32(0, true);\r\n    const ekey_ciphertext = str_decode(await file_head.slice(24, 24 + ekey_len).arrayBuffer());\r\n\r\n    // Decrypt master key with current_key and re-encrypt with export_key\r\n    if (!N || !phrase) {\r\n        const { N : _1, phrase : _2 } = await parse_ciphertext(ekey_ciphertext);\r\n        if (!N) N = _1;\r\n        if (!phrase) phrase = _2;\r\n    }\r\n    const new_ekey = await encrypt_data(await decrypt_data(ekey_ciphertext, current_key), new_key, phrase, N);\r\n    // Check length\r\n    if (new_ekey.length > 1024) {\r\n        throw new Error(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n    const new_ekey_len = new_ekey.length;\r\n    const new_ekey_len_bytes = new ArrayBuffer(4);\r\n    const new_ekey_len_view = new DataView(new_ekey_len_bytes);\r\n    new_ekey_len_view.setUint32(0, new_ekey_len, true);\r\n\r\n    const new_ekey_parts = [file_head.slice(0, 20), new_ekey_len_bytes, str_encode(new_ekey)];\r\n    const padding = new Uint8Array(PADDING_SIZE - new_ekey.length - 4).fill(0);\r\n    new_ekey_parts.push(padding);\r\n\r\n    return new Blob(new_ekey_parts);\r\n}", "import * as Exceptions from './exceptions.js';\r\n\r\nconst CRYPT_CONTEXT = Object.create(null);\r\nCRYPT_CONTEXT[Symbol.toStringTag] = 'CryptContext';\r\nCRYPT_CONTEXT['toString'] = function () {\r\n    return `${this[Symbol.toStringTag]} Object`;\r\n};\r\n\r\nexport { CRYPT_CONTEXT as CryptContext };\r\n\r\n/**\r\n * @param {any} PromiseLike\r\n */\r\nasync function _await(PromiseLike) {\r\n    if (PromiseLike instanceof Promise) return await PromiseLike;\r\n    return PromiseLike;\r\n}\r\n\r\nexport async function crypt_context_create() {\r\n    const ctx = Object.create(CRYPT_CONTEXT);\r\n    Object.defineProperty(ctx, '_created', { value: true });\r\n    return ctx;\r\n}\r\n\r\nexport async function crypt_context_destroy(ctx) {\r\n    if (!ctx || ctx._released) throw new Exceptions.InvalidParameterException(\"Invalid context\");\r\n    for (const i of Reflect.ownKeys(ctx)) {\r\n        if (typeof i === 'symbol') {\r\n            Reflect.deleteProperty(ctx, i);\r\n            continue;\r\n        }\r\n        const o = Reflect.get(ctx, i);\r\n        if (o) {\r\n            if (o.release) await _await(o.release());\r\n            else if (o.free) await _await(o.free());\r\n            else if (o.reset) await _await(o.reset());\r\n            else if (o.clear) await _await(o.clear());\r\n        }\r\n        if (!i.startsWith('_')) Reflect.deleteProperty(ctx, i);\r\n    }\r\n    Object.defineProperty(ctx, '_released', { value: true });\r\n    return true;\r\n}\r\n\r\n", "// streamed encryption\r\nimport { CryptContext } from \"./context.js\";\r\nimport * as Exceptions from './exceptions.js';\r\nimport { str_decode } from \"./str.js\";\r\nimport { derive_key } from \"./derive_key.js\";\r\nimport { unhexlify } from \"./binascii.js\";\r\nimport { decrypt_data } from \"./encrypt_data.js\";\r\nimport { normalize_version, ENCRYPTION_FILE_VER_1_2_10020 } from \"./encrypt_file.js\";\r\nimport { PADDING_SIZE, END_IDENTIFIER, END_MARKER, TAIL_BLOCK_MARKER, FILE_END_MARKER } from './internal-util.js';\r\n\r\nconst crypto = globalThis.crypto; // To avoid the possible security risk\r\n\r\n\r\nexport class InputStream {\r\n    /** @type {((start: number, end: number, signal?: AbortSignal) => Promise<Uint8Array>) | null} */\r\n    #reader;\r\n    #cache = {\r\n        position: 0,\r\n        end: 0,\r\n        /** @type {?Uint8Array} */ data: null,\r\n    };\r\n    #size;\r\n    get [Symbol.toStringTag]() {\r\n        return 'Stream';\r\n    }\r\n\r\n    /**\r\n     * @param {(start: number, end: number, signal?: AbortSignal) => Promise<Uint8Array>} reader The reader function\r\n     * @param {number} size The size of the stream\r\n     */\r\n    constructor(reader, size) {\r\n        if (typeof reader !== 'function') throw new Exceptions.InvalidParameterException('Stream: Invalid reader');\r\n        this.#reader = reader;\r\n        if (typeof size !== 'number') throw new Exceptions.InvalidParameterException('Stream: Invalid size');\r\n        this.#size = size;\r\n    }\r\n\r\n    get size() {\r\n        return this.#size;\r\n    }\r\n\r\n    /** @type {AbortController|null} */\r\n    #abort_controller = null;\r\n\r\n    /**\r\n     * Read a stream\r\n     * @param {Number} start start pos\r\n     * @param {Number} end end pos\r\n     * @param {Number|null} suggestion_end The suggested end. Used for caching.\r\n     * @param {AbortController|null} abort The abort controller. Used for aborting the read.\r\n     * @returns {Promise<Uint8Array>}\r\n     */\r\n    async read(start, end, suggestion_end = null, abort = null) {\r\n        if (!this.#reader) throw new Error('Stream: The stream has been closed.');\r\n        if (this.#cache.position != null && this.#cache.end && this.#cache.data && (start >= this.#cache.position && end <= this.#cache.end)) {\r\n            // cache match\r\n            return this.#cache.data.slice(start - this.#cache.position, end - this.#cache.position);\r\n        }\r\n\r\n        // normalize parameters\r\n        if (start < 0) throw new Exceptions.InvalidParameterException('Stream: Invalid start position');\r\n        if (end > this.#size) end = this.#size;\r\n        if (suggestion_end != null && suggestion_end > this.#size) suggestion_end = this.#size;\r\n\r\n        this.#abort_controller = abort;\r\n        if (suggestion_end != null && suggestion_end !== 0) {\r\n            // cache policy\r\n            const data = await this.#reader(start, suggestion_end, abort?.signal);\r\n            this.#abort_controller = null;\r\n            // save cache\r\n            this.#cache.position = start;\r\n            this.#cache.end = start + data.length;\r\n            this.#cache.data = (data);\r\n            // return data\r\n            return data.slice(0, end - start);\r\n        }\r\n        // cache mismatch\r\n        const data = await this.#reader(start, end, abort?.signal);\r\n        this.#abort_controller = null;\r\n        return data;\r\n    }\r\n\r\n    abort() {\r\n        this.#abort_controller?.abort();\r\n    }\r\n\r\n    purge() {\r\n        this.#cache.position = this.#cache.end = 0;\r\n        this.#cache.data = null;\r\n    }\r\n\r\n    close() {\r\n        this.#reader = null;\r\n        this.purge();\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Prepare for a stream decryption.\r\n * @param {CryptContext} ctx Context\r\n * @param {InputStream} stream The stream to decrypt.\r\n * @param {String} password The password.\r\n * @param {Object} [param3={}] Options.\r\n * @param {boolean} [param3.cache=true] Set if the cache is enabled.\r\n * @param {number} [param3.cache_max_size=256 * 1024 * 1024] Set the maximium size of the cache.\r\n */\r\nexport async function decrypt_stream_init(ctx, stream, password, {\r\n    cache = true,\r\n    cache_max_size = 256 * 1024 * 1024,\r\n} = {}) {\r\n    if (ctx._inited) throw new Exceptions.CryptContextReusedException();\r\n    Object.defineProperty(ctx, '_inited', { value: true });\r\n\r\n    ctx._type = '@decrypt_stream';\r\n    ctx.stream = {\r\n        stream: stream,\r\n        release: () => ctx.stream.stream.close(),\r\n    };\r\n\r\n    // \u6D3E\u751F\u5BC6\u94A5\r\n    const header = await stream.read(0, 13, 5000);\r\n    if (str_decode(header) !== 'MyEncryption/') {\r\n        throw new Exceptions.InvalidFileFormatException();\r\n    }\r\n    const top_header_version = (str_decode(await stream.read(13, 16)));\r\n    if(!(['1.1', '1.2'].includes(top_header_version))) {\r\n        throw new Exceptions.EncryptionVersionMismatchException();\r\n    }\r\n    const version_marker = new DataView((await stream.read(16, 20)).buffer).getUint32(0, true);\r\n    const version = normalize_version(top_header_version, version_marker);\r\n    let read_pos = 16 + 4;\r\n\r\n    if (version !== ENCRYPTION_FILE_VER_1_2_10020) {\r\n        throw new Exceptions.NotSupportedException(\"Cannot perform a streamed decryption on V1.1 files\");\r\n    }\r\n\r\n    const ekey_len = new DataView((await stream.read(read_pos, read_pos + 4)).buffer).getUint32(0, true);\r\n    const ekey = str_decode(await stream.read(read_pos + 4, read_pos + 4 + ekey_len));\r\n\r\n    read_pos += PADDING_SIZE;\r\n    \r\n    if (ekey_len > PADDING_SIZE) {\r\n        throw new Exceptions.InternalError(\"(Internal Error) This should not happen. Contact the application developer.\");\r\n    }\r\n        \r\n    // \u89E3\u5BC6\u4E3B\u5BC6\u94A5\r\n    const key = await decrypt_data(ekey, password);\r\n\r\n    // \u8BFB\u53D6\u5934\u90E8JSON\u957F\u5EA6\r\n    const json_len_bytes = await stream.read(read_pos, read_pos + 4);\r\n    const json_len = new DataView(json_len_bytes.buffer).getUint32(0, true);\r\n    read_pos += 4;\r\n\r\n    // \u89E3\u6790\u5934\u90E8JSON\r\n    const header_json = JSON.parse(\r\n        str_decode(await stream.read(read_pos, read_pos + json_len))\r\n    );\r\n    read_pos += json_len;\r\n\r\n    // \u63D0\u53D6\u6D3E\u751F\u53C2\u6570\r\n    const header_version = header_json.v;\r\n    if (!([5.5].includes(header_version))) throw new Exceptions.EncryptionVersionMismatchException();\r\n    const [phrase, salt_hex] = header_json.parameter.split(':');\r\n    const salt = unhexlify(salt_hex);\r\n    const iv4key = unhexlify(header_json.iv);\r\n    const N = header_json.N;\r\n\r\n    // \u83B7\u53D6chunk size\u548Civ\u53C2\u6570\r\n    const chunk_size = Number(new DataView((await stream.read(read_pos, read_pos + 8)).buffer).getBigUint64(0, true));\r\n    let nonce_counter = Number(new DataView((await stream.read(read_pos + 8, read_pos + 16)).buffer).getBigUint64(0, true));\r\n    read_pos += 16;\r\n\r\n    // \u5BF9\u5E94\u52A0\u5BC6\u65F6\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E2Aiv\uFF0C\u6211\u4EEC\u628Aiv\u53D6\u56DE\u6765\uFF0C\u91CD\u65B0\u751F\u6210\u5BC6\u94A5\uFF08\u6240\u6709\u6570\u636E\u5757\u7684\u5BC6\u94A5\u662F\u76F8\u540C\u7684\uFF09\r\n    const { derived_key } = await derive_key(key, iv4key, phrase, N, salt);\r\n    const cryptoKey = await crypto.subtle.importKey('raw', derived_key, { name: 'AES-GCM' }, false, ['decrypt']);\r\n\r\n    ctx.key = cryptoKey;\r\n    ctx.chunk_size = chunk_size;\r\n    ctx.nonce_counter = nonce_counter;\r\n    ctx.header_json_length = json_len;\r\n    ctx.cache_enabled = !!cache;\r\n    ctx.cached_chunks = new Map();\r\n    ctx.cached_chunks_add_order = new Array();\r\n    ctx.cached_size = 0;\r\n    ctx.cache_max_size = cache_max_size;\r\n\r\n    return true;\r\n}\r\n\r\n\r\n/**\r\n * Decrypt a stream.\r\n * @param {CryptContext} ctx Context\r\n * @param {Number} bytes_start The start byte to decrypt\r\n * @param {Number} bytes_end The end byte to decrypt\r\n * @param {AbortController|null} abort The abort controller.\r\n * @returns {Promise<Blob>} The decrypted data, stored in a Blob object.\r\n */\r\nexport async function decrypt_stream(ctx, bytes_start, bytes_end, abort) {\r\n    if (!ctx._inited) throw new Exceptions.CryptContextNotInitedException();\r\n    if (ctx._type !== '@decrypt_stream') throw new Exceptions.InvalidCryptContextTypeException(ctx._type);\r\n    if (ctx._released) throw new Exceptions.CryptContextReleasedException();\r\n\r\n    /** @type {InputStream} */\r\n    const stream = ctx.stream.stream;\r\n    const chunk_size = ctx.chunk_size;\r\n    const nonce_counter_start = ctx.nonce_counter;\r\n    const result = [];\r\n    \r\n    // \u6587\u4EF6\u593416 + \u7248\u672C\u6807\u8BC64 + \u4E3B\u5BC6\u94A54096 + JSON\u957F\u5EA64 + JSON + chunk_size8 + IV8\r\n    const chunks_start = 16 + 4 + PADDING_SIZE + 4 + ctx.header_json_length + 8 + 8;\r\n    // tag 16\u5B57\u8282\r\n    const size_per_chunk = chunk_size + 16;\r\n\r\n    // \u786E\u5B9A\u9700\u8981\u89E3\u5BC6\u7684\u5206\u5757\u4F4D\u7F6E\r\n    const max_chunk = Math.floor((stream.size - chunks_start - (32 + 8 + 32 + 8 + FILE_END_MARKER.length)) / size_per_chunk);\r\n    const start_chunk = Math.max(0, Math.floor(bytes_start / chunk_size));\r\n    const end_chunk = Math.min(max_chunk, Math.floor(bytes_end / chunk_size));\r\n    if (end_chunk < 0 || start_chunk > max_chunk) throw new Exceptions.InvalidParameterException(\"Out of range\")\r\n\r\n    // \u7528\u4E8E\u8BFB\u53D6chunk\r\n    const read_chunk = async (chunk) => {\r\n        // \u68C0\u67E5\u7F13\u5B58\r\n        if (ctx.cache_enabled && ctx.cached_chunks.has(chunk)) {\r\n            return ctx.cached_chunks.get(chunk);\r\n        }\r\n\r\n        // \u5B9A\u4F4D\u5BF9\u5E94chunk\r\n        let pos = chunks_start + (chunk * size_per_chunk);\r\n        // \u8BFB\u53D68\u5B57\u8282\r\n        const eight_bytes = await stream.read(pos, pos + 8, pos + (2 * size_per_chunk), abort);\r\n        // \u5224\u65AD\u662F\u5426\u7279\u6B8A\u60C5\u51B5\r\n        let real_size = 0;\r\n        if ((eight_bytes).every((v, i) => v === END_IDENTIFIER[i])) {\r\n            const full_bytes = await stream.read(pos, pos + 32, null, abort); // \u8BFB\u53D6\u5B8C\u6574\u6807\u8BB0\r\n            pos += 32;\r\n            // \u5224\u65AD\u662F\u5426\u7ED3\u675F\r\n            if (full_bytes.every((v, i) => v === END_MARKER[i])) {\r\n                return false\r\n            }\r\n            if (full_bytes.every((v, i) => v === TAIL_BLOCK_MARKER[i])) {\r\n                // \u8BFB\u53D6\u5206\u5757\u957F\u5EA6\r\n                const chunk_len_bytes = await stream.read(pos, pos + 8, null, abort);\r\n                pos += 8;\r\n                real_size = Number(new DataView(chunk_len_bytes.buffer).getBigUint64(0, true));\r\n                if (real_size === 0) return false // \u8BFB\u53D6\u52300\u5B57\u8282\uFF0C\u7ED3\u675F\u5FAA\u73AF\r\n            }\r\n        }\r\n\r\n        // \u8BFB\u53D6\r\n        const ciphertext_length = (real_size ? real_size : chunk_size)\r\n        const ciphertext = await stream.read(pos, pos + ciphertext_length + 16, null, abort);\r\n        // \u83B7\u53D6iv\r\n        const nonce_counter = nonce_counter_start + chunk;\r\n        const iv_array = new ArrayBuffer(12);\r\n        new DataView(iv_array).setBigUint64(4, BigInt(nonce_counter), true);\r\n\r\n        // \u4F7F\u7528WebCrypto\u89E3\u5BC6\r\n        try {\r\n            const data = await crypto.subtle.decrypt(\r\n                {\r\n                    name: 'AES-GCM',\r\n                    iv: new Uint8Array(iv_array),\r\n                },\r\n                ctx.key,\r\n                ciphertext\r\n            );\r\n            // \u4FDD\u5B58\u5230\u7F13\u5B58\r\n            if (ctx.cache_enabled) {\r\n                if (data.byteLength < ctx.cache_max_size) {\r\n                    ctx.cached_chunks_add_order.push(chunk);\r\n                    ctx.cached_chunks.set(chunk, data);\r\n                    ctx.cached_size += data.byteLength;\r\n                }\r\n\r\n                // \u68C0\u67E5\u7F13\u5B58\u5927\u5C0F\r\n                while (ctx.cached_size > ctx.cache_max_size) {\r\n                    const oldest_chunk = ctx.cached_chunks_add_order.shift();\r\n                    ctx.cached_size -= ctx.cached_chunks.get(oldest_chunk).byteLength;\r\n                    ctx.cached_chunks.delete(oldest_chunk);\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            if (!e || !(e instanceof DOMException)) throw new Exceptions.InternalError(`Internal error.`, { cause: e });\r\n            const name = e.name;\r\n            if (name === 'InvalidAccessError') throw new Exceptions.InvalidParameterException('InvalidAccessError.', { cause: e });\r\n            if (name === 'OperationError') throw new Exceptions.CannotDecryptException('Cannot decrypt. Did you provide the correct password?', { cause: e });\r\n            throw new Exceptions.InternalError(`Unexpected error.`, { cause: e });\r\n        }\r\n    };\r\n\r\n    // \u8BFB\u53D6chunk\r\n    let EOFbit = false;\r\n    for (let i = start_chunk; i <= end_chunk; i++) {\r\n        const decrypted_chunk = await read_chunk(i);\r\n        if (!decrypted_chunk) {\r\n            EOFbit = true;\r\n            break;\r\n        }\r\n        result.push(decrypted_chunk);\r\n    }\r\n\r\n    // \u5408\u6210Blob\r\n    const blob_full = new Blob(result);\r\n    // \u88C1\u526A\u9700\u8981\u7684\u90E8\u5206\r\n    const startpos = start_chunk * chunk_size;\r\n    // const endpos = (end_chunk + 1) * chunk_size - 1;\r\n    // bytes_start, bytes_end\r\n    const blob = blob_full.slice(bytes_start - startpos, bytes_end - startpos);\r\n    \r\n    // @ts-ignore\r\n    if (EOFbit) blob.eof = true;\r\n    return blob;\r\n}\r\n", "import { deriveKey__phrases } from \"./derive_key.js\";\r\nimport {\r\n    END_IDENTIFIER, END_MARKER, FILE_END_MARKER,\r\n    nextTick, PADDING_SIZE, TAIL_BLOCK_MARKER,\r\n    GetFileVersion, GetFileInfo, GetFileChunkSize,\r\n    POWER_2_64,\r\n} from \"./internal-util.js\";\r\n\r\nconst Internals = {\r\n    PADDING_SIZE,\r\n    END_IDENTIFIER,\r\n    TAIL_BLOCK_MARKER,\r\n    END_MARKER,\r\n    FILE_END_MARKER,\r\n    nextTick,\r\n    GetFileVersion,\r\n    GetFileInfo,\r\n    GetFileChunkSize,\r\n    derive_key_default_phrases_list: deriveKey__phrases,\r\n    POWER_2_64,\r\n};\r\n\r\nexport { Internals };", "import { NetworkError } from \"./exceptions.js\";\r\n\r\n\r\n/**\r\n * Create a file reader for local file.\r\n * @param {Blob} file The file handle. Can also be a File object from <input type=\"file\">.\r\n * @returns the file_reader.\r\n */\r\nexport async function createReaderForLocalFile(file) {\r\n    return async (/** @type {number} */ start, /** @type {number} */ end) => {\r\n        return new Uint8Array(await file.slice(start, end).arrayBuffer());\r\n    };\r\n}\r\n\r\n/**\r\n * Create a file reader for FileSystemFileHandle.\r\n * @param {FileSystemFileHandle} fileSystemHandle The file handle. Can only be a FileSystemFileHandle (using File System Access API like `window.showOpenFilePicker`)\r\n */\r\nexport async function createReaderForFileSystemHandle(fileSystemHandle) {\r\n    const file = await fileSystemHandle.getFile();\r\n    return await createReaderForLocalFile(file);\r\n}\r\n\r\n\r\n/**\r\n * Create a file reader for remote object.\r\n * This function will send a HTTP request to the server to get the file content.\r\n * @param {string} url\r\n */\r\nexport async function createReaderForRemoteObject(url) {\r\n    return async (/** @type {number} */ start, /** @type {number} */ end) => {\r\n        const resp = await fetch(url, {\r\n            headers: { Range: `bytes=${start}-${end - 1}` }\r\n        });\r\n        if (!resp.ok) throw new NetworkError(`Network Error: HTTP ${resp.status} : ${resp.statusText}`, {\r\n            response: resp\r\n        });\r\n        return new Uint8Array(await resp.arrayBuffer());\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Create a file writer for memory buffer.\r\n * @param {Array} bufferOutput The buffer to store the output data.\r\n * @returns The writer function.\r\n */\r\nexport async function createWriterForMemoryBuffer(bufferOutput) {\r\n    return async (/** @type {Uint8Array} */ data) => {\r\n        bufferOutput.push(data);\r\n    };\r\n}\r\n", "export const VERSION = 'Encryption/5.6 FileEncryption/1.2 Patch/56.10 Package/1.56.10';\r\n// Genshin/5.6 `Paralogism` [\u6096\u7406]\r\n// https://genshin.hoyoverse.com/"],
  "mappings": "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",
  "names": ["hexTable", "i", "hexlify", "data", "length", "arr", "throwing", "unhexlify", "hexStr", "bytes", "highCode", "lowCode", "high", "low", "crypto", "get_random_bytes", "count", "randomBytes", "get_random_int8_number", "get_random_uint8_number", "str_encode", "input", "encoding", "str_decode", "exceptions_exports", "__export", "BadDataException", "CannotDecryptException", "ChaCha20NotSupportedException", "CryptContextNotInitedException", "CryptContextReleasedException", "CryptContextReusedException", "DangerousEncryptionAlgorithmException", "DataError", "DeprecationException", "EncryptionAlgorithmNotSupportedException", "EncryptionError", "EncryptionVersionMismatchException", "EndOfFileException", "ExpectedError", "FileCorruptedException", "IVException", "InputError", "InternalError", "InvalidCryptContextTypeException", "InvalidEndMarkerException", "InvalidFileFormatException", "InvalidParameterException", "InvalidScryptParameterException", "LibraryError", "NetworkError", "NotSupportedException", "OperationNotPermittedException", "ParameterError", "RuntimeException", "UnexpectedError", "UnexpectedFailureInChunkDecryptionException", "UserException", "VersionSystemError", "raise", "message", "additional", "error", "load_script", "src", "resolve", "reject", "script", "e", "load_deps_es5", "deps_name", "deps_src", "load_script", "scryptAPI", "load_deps_es5", "scrypt", "queue", "running", "work", "task", "resolve", "reject", "p", "dk", "e", "r", "thread", "nextTick", "key", "salt", "N", "dklen", "onprogress", "PADDING_SIZE", "END_IDENTIFIER", "TAIL_BLOCK_MARKER", "END_MARKER", "FILE_END_MARKER", "POWER_2_64", "UnexpectedError", "timerproc", "nextTick", "r", "normalize_version", "major_version", "version_marker", "vm", "ENCRYPTION_FILE_VER_1_1_0", "ENCRYPTION_FILE_VER_1_2_10020", "GetFileVersion", "file_reader", "header", "str_decode", "InvalidFileFormatException", "top_header_version", "EncryptionVersionMismatchException", "GetFileInfo", "version", "OperationNotPermittedException", "read_pos", "ekey_len", "ekey", "json_len_bytes", "json_len", "chunk_size", "nonce_counter", "GetFileChunkSize", "CheckAlgorithm", "algorithm", "ChaCha20NotSupportedException", "DangerousEncryptionAlgorithmException", "EncryptionAlgorithmNotSupportedException", "is_encrypted_message", "message", "arr", "data", "phrase", "salt", "N", "v", "a", "json", "is_encrypted_file", "crypto", "safeparse", "json", "r", "BadDataException", "encrypt_data", "message", "key", "phrase", "N", "iv", "get_random_bytes", "derived_key", "parameter", "N2", "derive_key", "cipher", "OperationNotPermittedException", "alg", "ciphertext", "str_encode", "encrypted_message", "hexlify", "parse_ciphertext", "message_encrypted", "InvalidParameterException", "jsoned", "arr", "data", "salt", "v", "a", "CheckAlgorithm", "encrypted_data", "unhexlify", "salt_b64", "tag", "decrypt_data", "decrypted_data", "str_decode", "e", "InternalError", "name", "CannotDecryptException", "deriveKey__phrases", "derive_key", "key", "iv", "phrase", "N", "salt", "r", "p", "dklen", "InvalidScryptParameterException", "InvalidParameterException", "get_random_bytes", "get_random_uint8_number", "parameter", "hexlify", "keyInput", "scrypt", "str_encode", "derive_key_for_file", "file_reader", "user_key", "read_pos", "version", "GetFileVersion", "ENCRYPTION_FILE_VER_1_1_0", "NotSupportedException", "ENCRYPTION_FILE_VER_1_2_10020", "EncryptionVersionMismatchException", "ekey_len", "ekey", "str_decode", "PADDING_SIZE", "InternalError", "decrypt_data", "json_len_bytes", "json_len", "header_json", "header_version", "salt_hex", "unhexlify", "iv4key", "algorithm", "CheckAlgorithm", "scrypt_hex", "crypto", "encrypt_file", "file_reader", "file_writer", "user_key", "callback", "phrase", "N", "chunk_size", "InvalidParameterException", "str_encode", "VERSION_MARKER", "versionMarkerBuffer", "key", "hexlify", "get_random_bytes", "ekey", "encrypt_data", "ekey_bytes", "PADDING_SIZE", "InternalError", "lengthBuffer", "padding", "nextTick", "iv_for_key", "derived_key", "parameter", "N2", "derive_key", "header_data", "header_json", "headerLengthBuffer", "chunkSizeBuffer", "total_bytes", "nonce_counter", "position", "nonce_counter_start", "cryptoKey", "chunk", "BadDataException", "isFinalChunk", "iv", "POWER_2_64", "IVException", "TAIL_BLOCK_MARKER", "chunkLengthBuffer", "ivArray", "ciphertext", "ciphertextArray", "END_MARKER", "totalBytesBuffer", "FILE_END_MARKER", "decrypt_file_V_1_1_0", "header", "str_decode", "read_pos", "ekey_len_bytes", "ekey_len", "decrypt_data", "json_len_bytes", "json_len", "salt_hex", "salt", "unhexlify", "iv4key", "chunk_len_bytes", "v", "i", "chunk_len", "full_ciphertext", "decrypted", "total_bytes_bytes", "total_bytes_decrypted", "end_marker", "FileCorruptedException", "InvalidEndMarkerException", "decrypt_file", "GetFileVersion", "ENCRYPTION_FILE_VER_1_1_0", "NotSupportedException", "header_version", "EncryptionVersionMismatchException", "algorithm", "CheckAlgorithm", "raise", "is_final_chunk", "chunk_tag", "real_size", "END_IDENTIFIER", "full_bytes", "ciphertext_length", "iv_array", "e", "name", "UnexpectedFailureInChunkDecryptionException", "encrypt_blob", "blob", "password", "buffer", "start", "end", "data", "UnexpectedError", "decrypt_blob", "export_master_key", "file_head", "current_key", "export_key", "InvalidParameterException", "BadDataException", "version", "GetFileVersion", "start", "end", "ENCRYPTION_FILE_VER_1_1_0", "ekey_len", "buffer", "ekey_ciphertext", "str_decode", "encrypt_data", "decrypt_data", "ENCRYPTION_FILE_VER_1_2_10020", "PADDING_SIZE", "EncryptionVersionMismatchException", "change_file_password_1_1_0", "new_key", "headerBlob", "new_ekey", "new_ekey_len", "new_ekey_len_bytes", "new_ekey_parts", "str_encode", "padding", "change_file_password", "phrase", "N", "_1", "_2", "parse_ciphertext", "CRYPT_CONTEXT", "_await", "PromiseLike", "crypt_context_create", "ctx", "CRYPT_CONTEXT", "crypt_context_destroy", "InvalidParameterException", "i", "o", "crypto", "InputStream", "#reader", "#cache", "#size", "reader", "size", "InvalidParameterException", "#abort_controller", "start", "end", "suggestion_end", "abort", "data", "decrypt_stream_init", "ctx", "stream", "password", "cache", "cache_max_size", "CryptContextReusedException", "header", "str_decode", "InvalidFileFormatException", "top_header_version", "EncryptionVersionMismatchException", "version_marker", "version", "normalize_version", "read_pos", "ENCRYPTION_FILE_VER_1_2_10020", "NotSupportedException", "ekey_len", "ekey", "PADDING_SIZE", "InternalError", "key", "decrypt_data", "json_len_bytes", "json_len", "header_json", "header_version", "phrase", "salt_hex", "salt", "unhexlify", "iv4key", "N", "chunk_size", "nonce_counter", "derived_key", "derive_key", "cryptoKey", "decrypt_stream", "bytes_start", "bytes_end", "CryptContextNotInitedException", "InvalidCryptContextTypeException", "CryptContextReleasedException", "nonce_counter_start", "result", "chunks_start", "size_per_chunk", "max_chunk", "FILE_END_MARKER", "start_chunk", "end_chunk", "read_chunk", "chunk", "pos", "eight_bytes", "real_size", "v", "i", "END_IDENTIFIER", "full_bytes", "END_MARKER", "TAIL_BLOCK_MARKER", "chunk_len_bytes", "ciphertext_length", "ciphertext", "iv_array", "oldest_chunk", "e", "name", "CannotDecryptException", "EOFbit", "decrypted_chunk", "blob_full", "startpos", "blob", "Internals", "PADDING_SIZE", "END_IDENTIFIER", "TAIL_BLOCK_MARKER", "END_MARKER", "FILE_END_MARKER", "nextTick", "GetFileVersion", "GetFileInfo", "GetFileChunkSize", "deriveKey__phrases", "POWER_2_64", "util_wrappers_exports", "__export", "createReaderForFileSystemHandle", "createReaderForLocalFile", "createReaderForRemoteObject", "createWriterForMemoryBuffer", "createReaderForLocalFile", "file", "start", "end", "createReaderForFileSystemHandle", "fileSystemHandle", "createReaderForRemoteObject", "url", "resp", "NetworkError", "createWriterForMemoryBuffer", "bufferOutput", "data", "VERSION"]
}
